<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" href="http://code.jquery.com/qunit/qunit-git.css" type="text/css" />
<title>QUnit - csser</title>
</head>
<body>
<div id="qunit"></div>

<script type="text/javascript" src="http://code.jquery.com/qunit/qunit-git.js"></script>

<script type="text/javascript" src="../dist/flower.js"></script>

<script type="text/javascript">
test('addClass', function() {
	var elem = {};
	elem.className = '';
	Flower.csser.addClass(elem, "c1");
	equal(elem.className, ' c1');
	Flower.csser.addClass(elem, "c1");
	equal(elem.className, ' c1'); // it should not add again if className already exists
});

test('removeClass', function() {
	var elem = {};
	elem.className = 'f \ng';
	Flower.csser.removeClass(elem, 'g');
	equal(elem.className, 'f');

	// test class names that contains others
	elem.className = 'gg g  ggg';
	Flower.csser.removeClass(elem, 'g');
	equal(elem.className, 'gg  ggg');

	// test remove fails, and class names are case sensitive
	elem.className = 'ab cd';
	Flower.csser.removeClass(elem, 'aB');
	equal(elem.className, 'ab cd');
});

test('hasClass', function() {
	var elem = {};

	elem.className = 'test';
	strictEqual(Flower.csser.hasClass(elem, 'test'), true);

	elem.className = 'A bb';
	strictEqual(Flower.csser.hasClass(elem, 'a'), false);
	strictEqual(Flower.csser.hasClass(elem, 'A'), true);
	strictEqual(Flower.csser.hasClass(elem, 'b'), false);
});
</script>
</body>
</html>
